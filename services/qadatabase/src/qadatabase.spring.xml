<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.test_21.qadatabase.controller,com.test_21.qadatabase.service,com.test_21.qadatabase.dao"/>
    <bean class="com.wavemaker.runtime.data.spring.WMPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>
                    classpath:qadatabase.properties
                </value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
   <bean id="qadatabaseWMManagedDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" depends-on="systemPropertyInitializer" lazy-init="true"
                      p:driverClass="${qadatabase.driverClass}"
                      p:jdbcUrl="${qadatabase.url}"
                      p:user="${qadatabase.username}"
                      p:password="${qadatabase.password}"
                      p:maxPoolSize="4"
                      p:minPoolSize="2"
                      p:maxIdleTime="600"
                      p:maxStatements="50"
                      p:maxStatementsPerConnection="20"
                      p:checkoutTimeout="30000"
                      p:idleConnectionTestPeriod="300"
                      p:unreturnedConnectionTimeout="300"
                      p:debugUnreturnedConnectionStackTraces="true"
                      p:acquireRetryAttempts="3"
                      p:acquireRetryDelay="1000"
                      p:contextClassLoaderSource="library"
                      p:privilegeSpawnedThreads="true"
                      />
    
    <bean id="qadatabaseSessionFactory" class="com.wavemaker.runtime.data.factory.TypeResolverSessionFactoryBean">
        <property name="dataSource" ref="qadatabaseDataSource"/>
        <property name="packagesToScan" value="com.test_21.qadatabase"/>
        <property name="mappingResources">
            <list>
                <value>
                    qadatabase-queries.hbm.xml
                </value>
            </list>
        </property>
        <property name="customTypes">
            <array value-type="com.wavemaker.runtime.data.CustomType">
                <ref bean="dateTimeCustomType"/>
            </array>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
                    ${qadatabase.dialect}
                </prop>
                <prop key="hibernate.show_sql">
                    false
                </prop>
                <prop key="hibernate.globally_quoted_identifiers">
                    false
                </prop>
                <prop key="hibernate.hbm2ddl.auto">
                    ${qadatabase.hbm2ddl}
                </prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">
                    false
                </prop>
            </props>
        </property>
    </bean>
    <bean id="qadatabaseTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="qadatabaseSessionFactory"/>
    </bean>
    <bean id="qadatabaseTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="qadatabaseSessionFactory"/>
    </bean>
    <bean id="qadatabaseWMQueryExecutor" class="com.wavemaker.runtime.data.dao.query.WMQueryExecutorImpl">
        <property name="template" ref="qadatabaseTemplate"/>
    </bean>
    <bean id="qadatabaseWMProcedureExecutor" class="com.wavemaker.runtime.data.dao.procedure.WMProcedureExecutorImpl">
        <property name="template" ref="qadatabaseTemplate"/>
        <property name="serviceId" value="qadatabase" />
    </bean>

    <bean id="persistentLocalDateTimeType" class="com.wavemaker.studio.common.data.type.WMPersistentLocalDateTime"/>
    <bean id="dateTimeCustomType" class="com.wavemaker.runtime.data.CustomType">
        <property name="type" ref="persistentLocalDateTimeType"/>
        <property name="keys">
            <list>
                <value>DateTime</value>
                <value>org.joda.time.LocalDateTime</value>
            </list>
        </property>
    </bean>
    <bean id="qadatabasePageableHandlerMethodResolver" class="com.wavemaker.runtime.resolver.WMPageableHandlerMethodArgumentResolver" >
        <property name="pageParameterName" value="page"/>
        <property name="sizeParameterName" value="size"/>
        <property name="oneIndexedParameters" value="true"/>
        <property name="maxPageSize" value="${qadatabase.maxPageSize}"/>
        <property name="fallbackPageable">
         <bean  class="org.springframework.data.domain.PageRequest">
            <constructor-arg  value="0"/>
            <constructor-arg  value="20"/>
         </bean>
         </property>
    </bean>

    <bean id="qadatabaseDataSource" class="com.wavemaker.runtime.data.datasource.WMDataSource">
           <property name="dataSourceType" value="${qadatabase.dataSourceType}"/>
           <property name="jndiName" value="${qadatabase.jndiName}"/>
           <property name="serviceId" value="qadatabase"/>
    </bean>


    <tx:annotation-driven/>

</beans>

