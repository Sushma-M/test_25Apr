/*Copyright (c) 2016-2017 testing1.com All Rights Reserved.
 This software is the confidential and proprietary information of testing1.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing1.com*/

package com.test_21.qadatabase.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_21.qadatabase.*;

/**
 * Service object for domain model class Table21.
 * @see com.test_21.qadatabase.Table21
 */

public interface Table21Service {
   /**
	 * Creates a new table21.
	 * 
	 * @param created
	 *            The information of the created table21.
	 * @return The created table21.
	 */
	public Table21 create(Table21 created);

	/**
	 * Deletes a table21.
	 * 
	 * @param table21Id
	 *            The id of the deleted table21.
	 * @return The deleted table21.
	 * @throws EntityNotFoundException
	 *             if no table21 is found with the given id.
	 */
	public Table21 delete(Integer table21Id) throws EntityNotFoundException;

	/**
	 * Finds all table21s.
	 * 
	 * @return A list of table21s.
	 */
	public Page<Table21> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Table21> findAll(Pageable pageable);
	
	/**
	 * Finds table21 by id.
	 * 
	 * @param id
	 *            The id of the wanted table21.
	 * @return The found table21. If no table21 is found, this method returns
	 *         null.
	 */
	public Table21 findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a table21.
	 * 
	 * @param updated
	 *            The information of the updated table21.
	 * @return The updated table21.
	 * @throws EntityNotFoundException
	 *             if no table21 is found with given id.
	 */
	public Table21 update(Table21 updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the table21s in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the table21.
	 */

	public long countAll();


    public Page<Table21> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

