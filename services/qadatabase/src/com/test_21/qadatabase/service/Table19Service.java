/*Copyright (c) 2016-2017 testing1.com All Rights Reserved.
 This software is the confidential and proprietary information of testing1.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing1.com*/

package com.test_21.qadatabase.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_21.qadatabase.*;

/**
 * Service object for domain model class Table19.
 * @see com.test_21.qadatabase.Table19
 */

public interface Table19Service {
   /**
	 * Creates a new table19.
	 * 
	 * @param created
	 *            The information of the created table19.
	 * @return The created table19.
	 */
	public Table19 create(Table19 created);

	/**
	 * Deletes a table19.
	 * 
	 * @param table19Id
	 *            The id of the deleted table19.
	 * @return The deleted table19.
	 * @throws EntityNotFoundException
	 *             if no table19 is found with the given id.
	 */
	public Table19 delete(Integer table19Id) throws EntityNotFoundException;

	/**
	 * Finds all table19s.
	 * 
	 * @return A list of table19s.
	 */
	public Page<Table19> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Table19> findAll(Pageable pageable);
	
	/**
	 * Finds table19 by id.
	 * 
	 * @param id
	 *            The id of the wanted table19.
	 * @return The found table19. If no table19 is found, this method returns
	 *         null.
	 */
	public Table19 findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a table19.
	 * 
	 * @param updated
	 *            The information of the updated table19.
	 * @return The updated table19.
	 * @throws EntityNotFoundException
	 *             if no table19 is found with given id.
	 */
	public Table19 update(Table19 updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the table19s in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the table19.
	 */

	public long countAll();


    public Page<Table19> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

