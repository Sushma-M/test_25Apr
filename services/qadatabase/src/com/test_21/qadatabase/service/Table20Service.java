/*Copyright (c) 2016-2017 testing1.com All Rights Reserved.
 This software is the confidential and proprietary information of testing1.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing1.com*/

package com.test_21.qadatabase.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_21.qadatabase.*;

/**
 * Service object for domain model class Table20.
 * @see com.test_21.qadatabase.Table20
 */

public interface Table20Service {
   /**
	 * Creates a new table20.
	 * 
	 * @param created
	 *            The information of the created table20.
	 * @return The created table20.
	 */
	public Table20 create(Table20 created);

	/**
	 * Deletes a table20.
	 * 
	 * @param table20Id
	 *            The id of the deleted table20.
	 * @return The deleted table20.
	 * @throws EntityNotFoundException
	 *             if no table20 is found with the given id.
	 */
	public Table20 delete(Integer table20Id) throws EntityNotFoundException;

	/**
	 * Finds all table20s.
	 * 
	 * @return A list of table20s.
	 */
	public Page<Table20> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Table20> findAll(Pageable pageable);
	
	/**
	 * Finds table20 by id.
	 * 
	 * @param id
	 *            The id of the wanted table20.
	 * @return The found table20. If no table20 is found, this method returns
	 *         null.
	 */
	public Table20 findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a table20.
	 * 
	 * @param updated
	 *            The information of the updated table20.
	 * @return The updated table20.
	 * @throws EntityNotFoundException
	 *             if no table20 is found with given id.
	 */
	public Table20 update(Table20 updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the table20s in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the table20.
	 */

	public long countAll();


    public Page<Table20> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

